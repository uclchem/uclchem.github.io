(self.webpackChunk=self.webpackChunk||[]).push([[326],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(n),y=o,d=s["".concat(l,".").concat(y)]||s[y]||m[y]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},448:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>a,metadata:()=>p,toc:()=>l,default:()=>u});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a={id:"pythoncompiling",title:"Compiling for Python"},p={unversionedId:"pythoncompiling",id:"pythoncompiling",isDocsHomePage:!1,title:"Compiling for Python",description:"Compiling",source:"@site/docs/pythoncompiling.md",sourceDirName:".",slug:"/pythoncompiling",permalink:"/docs/pythoncompiling",version:"current",lastUpdatedBy:"jonholdship",lastUpdatedAt:1621867778,formattedLastUpdatedAt:"5/24/2021",frontMatter:{id:"pythoncompiling",title:"Compiling for Python"},sidebar:"docs",previous:{title:"Troubleshooting",permalink:"/docs/trouble"},next:{title:"Running Your First Models",permalink:"/docs/pythonstart"}},l=[{value:"Compiling",id:"compiling",children:[]}],c={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"compiling"},"Compiling"),(0,i.kt)("p",null,"UCLCHEM can be compiled as a Python library, you'll need F2PY for this which is part of the numpy package. "),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"src/Makefile")," there are two variables that must be set ",(0,i.kt)("inlineCode",{parentName:"p"},"FC")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"f2pyFC"),". The former is simply your fortran compiler and the latter is a flag for F2PY to specify which fortran compiler will be used. Therefore, ",(0,i.kt)("inlineCode",{parentName:"p"},"f2pyFC")," must match ",(0,i.kt)("inlineCode",{parentName:"p"},"FC"),". For example, if using the GNU fortran compilers:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"FC=gfortran\nf2pyFC=gnu95\n")),(0,i.kt)("p",null,"Once this is set up, a Python version of UCLCHEM can be built:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"make python\n")),(0,i.kt)("p",null,"This will create uclchem.so and copy it to ",(0,i.kt)("inlineCode",{parentName:"p"},"Python/uclchem/uclchem.so"),". If one adds the full path to ",(0,i.kt)("inlineCode",{parentName:"p"},"Python/")," to their ",(0,i.kt)("inlineCode",{parentName:"p"},"PYTHONPATH")," environmental variable, they should be able to use UCLCHEM in any Python script via"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"import uclchem")),(0,i.kt)("p",null,"Otherwise, one can move the ",(0,i.kt)("inlineCode",{parentName:"p"},"Python/uclchem/")," directory to wherever they need to use uclchem in Python."))}u.isMDXComponent=!0}}]);